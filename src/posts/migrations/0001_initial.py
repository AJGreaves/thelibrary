# Generated by Django 3.1.7 on 2021-08-04 15:09

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('slack', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PostFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('Innappropriate content', 'Inappropriate content'), ('Incorrect content', 'Incorrect content'), ('Outdated content', 'Outdated content')], default='Innappropriate content', max_length=100)),
                ('message', models.TextField(max_length=200, null=True)),
                ('flagger', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='post_flagger', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(error_messages={'unique': 'This post title already exists, please choose another.'}, max_length=70, unique=True)),
                ('summary', models.CharField(max_length=140)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('body', ckeditor.fields.RichTextField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Submitted', 'Submitted'), ('Published', 'Published'), ('Review', 'Review')], default='Submitted', max_length=100)),
                ('mod_message', models.TextField(blank=True, max_length=300, null=True)),
                ('image_1', models.ImageField(blank=True, null=True, upload_to='images/posts/')),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='images/posts/')),
                ('image_3', models.ImageField(blank=True, null=True, upload_to='images/posts/')),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='images/posts/')),
                ('editors_note', models.TextField(blank=True, max_length=400, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='users.userprofile')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts_to_category', to='posts.postcategory')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.course')),
                ('flag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flags', to='posts.postflag')),
                ('likes', models.ManyToManyField(blank=True, related_name='post_likes', to=settings.AUTH_USER_MODEL)),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mod_field', to=settings.AUTH_USER_MODEL)),
                ('slack_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='slack.slackchannel')),
                ('tags', models.ManyToManyField(blank=True, related_name='post_tags', to='posts.PostTag')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_post', to='posts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
    ]
